// --- general resets ---
body {
  margin: 0;
}
table {
  border-spacing: 0;
  border-collapse: collapse;
  th, td {
    font-size: 100%;
    text-align: left;
  }
}
// ----------------------
// --- generic compact ---
h1, h2, h3, h4, h5, h6 {
  margin: 1ex 0;
}
div, span, section, nav, main, textarea, input, button {
  box-sizing: border-box;
}
section {
  margin-top: 5px;
  margin-bottom: 5px;
  padding-top: 5px;
  padding-bottom: 5px;
}
.vpad {
  padding-top: 10px;
  padding-bottom: 10px;
}
.hpad {
  padding-left: 10px;
  padding-right: 10px;
}
// -----------------------
// --- generic tables ---
table {
  &.fill {
    width: 100%;
  }
  &.padded {
    & > thead > tr > th, & > tbody > tr > td {
      &:first-child { padding-left: 10px; }
      &:last-child { padding-right: 10px; }
    }
  }
  &.grid {
    td, th {
      border: 1px solid rgba(0, 0, 0, 0.1);
    }
    tr td, tr th {
      &:first-child { border-left: 0; }
      &:last-child { border-right: 0; }
    }
  }
  &.lined {
    tbody td {
      border-top: 1px solid rgba(0, 0, 0, 0.1);
    }
  }
  &.striped {
    tbody {
      tr:nth-child(odd) {
        background-color: rgba(255, 255, 255, 0.5);
      }
      tr:nth-child(even) {
        background-color: rgba(0, 0, 0, 0.05);
      }
    }
  }
}
// ----------------------

// I wish I could just return a color from a function.
// Too complicated for LESS, though, I guess.
.border-gray(@gray) {
  border: 1px solid rgb(@gray, @gray, @gray);
}
.background-gray(@gray) {
  background-color: rgb(@gray, @gray, @gray);
}
.color-gray(@gray) {
  color: rgb(@gray, @gray, @gray);
}


body {
  font-family: "Lucida Grande", Arial, sans-serif;
}
p {
  margin: 1ex 0;
}
label span {
  vertical-align: baseline;
}
label[disabled] {
  .color-gray(40%);
}
textarea, input, select {
  vertical-align: baseline;
  margin: 0;
}
input[type="radio"], input[type="checkbox"] {
  margin: 1px .25ex;
}
fieldset {
  margin: 0 10px 10px 0;
  border: 1px solid #CCC;
}
.nowrap {
  white-space: nowrap;
}
time {
  white-space: nowrap;
}
.code {
  font: 9pt monospace;
}
.shadow {
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
}
.help {
  cursor: pointer;
}
.ng-invalid {
  box-shadow: 0 0 10px rgb(200, 0, 0);
}
.unlimited {
  max-height: none !important;
  max-width: none !important;
}
.json {
  font: 9pt monospace;
  min-height: 30px;
  min-width: 400px
}
a[ng-click] {
  color: #00E;
  cursor: pointer;
  text-decoration: underline;
}

button {
  margin: 0;
}
button.anchor {
  border-width: 0;
  text-decoration: underline;
  cursor: pointer;
  font-size: 100%;
  padding: 0;
}

body.admin {
  background-color: #FBFBFB;
  font-size: 80%; // why is the default so big!?
  overflow-y: scroll;

  .flash {
    position: fixed;
    left: 0;
    right: 0;

    padding: 2px;
    height: 22px;
    box-sizing: border-box;

    z-index: 1000; // only needs to be greater than the nav's z-index
    text-align: center;
    color: white;
    background-color: rgba(0, 0, 0, 66%);
    pointer-events: none; // allows click through to elements underneath
  }

  nav {
    left: 0;
    right: 0;
    // box-sizing must be border-box to get correct fixedflow-placeholder heights
    box-sizing: border-box;

    &[fixedflow] {
      position: fixed;
      // for some reason elements with opacity < 1.0 float on top of fixed elements,
      // but a non-zero z-index here fixes that
      z-index: 100;
      background-color: #333;
    }

    &.sub {
      background-color: #FBFBFB;
      border-bottom: 1px solid #BBB;
      .tab {
        margin-bottom: -1px; // hack, sort of
        background-color: #BBB;
        border-color: #BBB;
        // border-bottom: 0;
        &:hover, &.current {
          border-color: #BBB;
          background-color: #FBFBFB;
        }
      }
    }

    .control {
      display: inline-block;
      padding: 2px 6px;
      margin: 1px 0;
      &:first-child {
        margin-left: 3px;
      }
      &:last-child {
        margin-right: 3px;
      }
    }

    .tab {
      // spacing / sizing:
      .control;
      padding: 1px 5px 2px;
      margin: 3px 0 0 0;
      border-style: solid;
      border-radius: 3px 3px 0 0;
      border-width: 1px 1px 0 1px;
      // coloring:
      background-color: #BBB;
      border-color: #BBB;
      &:hover, &.current {
        border-color: #FBFBFB;
        background-color: #FBFBFB;
      }
    }
  }
}

// only a few things should stretch the whole width,
// like sections, and tables
.box {
  background-color: white;
  // light gray border on top and bottom only
  border: 1px solid #EEE;
  border-width: 1px 0;
}

form {
  .block {
    display: block;
    margin-top: 5px;
    margin-bottom: 5px;
  }
}

table {
  td, th {
    vertical-align: top;
  }
}
table.keyval {
  td:first-child {
    font-weight: bold;
  }
  tbody {
    border-top: 1px solid #CCC;
    &:first-child {
      border-top: 0;
    }
  }
}

table.responses {
  td.context {
    background-color: #FFF8F8;
  }
  td.value {
    background-color: #F8FFF8;
  }
}

.hover-flow {
  word-wrap: break-word; // normal | break-word | inherit
  text-overflow: ellipsis;

  white-space: nowrap; // normal | pre |  | pre-wrap | pre-line | inherit
  overflow: hidden;
  &:hover {
    white-space: normal;
    overflow: visible;
  }
}
