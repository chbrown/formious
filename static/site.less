// I wish I could just return a color from a function.
// Too complicated for LESS, though, I guess.
.border-gray(@gray) {
  border: 1px solid rgb(@gray, @gray, @gray);
}
.background-gray(@gray) {
  background-color: rgb(@gray, @gray, @gray);
}
.color-gray(@gray) {
  color: rgb(@gray, @gray, @gray);
}


body {
  margin: 0;
  font-family: "Lucida Grande", Arial, sans-serif;
}
h1, h2, h3, h4, h5, h6 {
  margin: 0.5ex 0;
}
p {
  margin: 1ex 0;
}
button {
  // margin: 10px 10px 0 0;
}
label {
  span {
    vertical-align: baseline;
  }
}
label[disabled] {
  .color-gray(50%);
  // margin: 2px 0;
  // display: block;
  // vertical-align: middle;
}
textarea, input {
  vertical-align: baseline;
  margin: 0;
  box-sizing: border-box;
}
input[type="radio"], input[type="checkbox"] {
  margin: 1px .25ex;
}
fieldset {
  margin: 0 10px 10px 0;
  border: 1px solid #CCC;
}
.nowrap {
  white-space: nowrap;
}
time {
  white-space: nowrap;
}
.code {
  font: 9pt monospace;
}

.help {
  cursor: pointer;
  .color-gray(60%);

  .summary {
    // display: block;
    // margin: 1ex 0;
  }
  .full {
    display: none;
  }

  &.expanded {
    .color-gray(5%);
    .summary {
      display: none;
    }
    .full {
      display: inherit;
    }
  }
}
.ng-invalid {
  box-shadow: 0 0 10px rgb(200, 0, 0);
}

.json {
  .code;
  min-height: 30px;
  min-width: 400px
}

.unlimited {
  max-height: none !important;
  max-width: none !important;
}

button.anchor {
  // vertical-align: top;
  background: none;
  border: none;
  text-decoration: underline;
  cursor: pointer;
  font-size: 100%;
  padding: 0;
}

body.admin {
  .background-gray(98%);
  font-size: 80%; // why is the default so big!?
  overflow-y: scroll;

  #flash {
    display: none;
    position: fixed;
    width: 100%;
    height: 23px;
    z-index: 100; // only needs to be greater than or equal to 1
    text-align: center;
    color: white;
    background-color: rgba(0, 0, 0, 66%);
    pointer-events: none; // allows click through to elements underneath
    img, span {
      vertical-align: middle;
    }
  }
  nav {
    position: fixed;
    width: 100%;
    box-sizing: border-box;
    padding: 0 5px;
    font-size: 90%;

    span, a, button, img, select {
      display: inline-block;
      vertical-align: middle;
      margin: 3px 0 0 0;
    }
    a, button.anchor {
      padding: 2px 6px 3px;
      border-radius: 2px;
    }

    // background is especially dark for the root nav
    &.root {
      .background-gray(30%);

      a, button.anchor {
        border-radius: 2px 2px 0 0;
        .background-gray(80%);
        &:hover, &.current {
          .background-gray(98%); // same as body.admin background
        }
      }
    }
    &.sub {
      .background-gray(98%);

      border-bottom: 1px solid #BBB;
    }

    // span.group {
    //   border: 1px solid #CCC;
    //   border-radius: 3px;
    //   padding-left: 6px;
    // }

  }

  // .status span {
  //   font-weight: bold;
  //   margin: 10px 10px 0 0;
  //   &.Submitted { color: #CCC; }
  //   &.Approved { color: darkgreen; }
  //   &.Rejected { color: darkred; }
  // }
}

section {
  margin: 10px 0;
}
main {
  margin: 10px 0;

  // most immediate children of main should be padded
  & > div, & > form, & > h2, & > h3, & > h4, & > a, & > p {
    padding: 0 10px;
  }
  // Usually sections:
  .box-common {
    background-color: white;
    border: 1px solid #EEE;
    border-width: 1px 0;
    width: 100%;

    & > table {
      width: 100%;
    }
  }
  .box {
    .box-common;
    padding: 10px;
    box-sizing: border-box;
  }
  .fill {
    .box-common;
    padding: 5px 0;
  }
  section {
    // mostly like box, except for no horizontal padding on the table, and let the table handle its own borders
    overflow-x: auto;
    width: 100%;
    & > table {
      margin: 5px 0;
      width: 100%;
    }
  }
}

table {
  border-collapse: collapse;
  th {
    text-align: left;
  }
  td, th {
    vertical-align: top;
    // padding: 0px 4px 1px 1px;
  }
}
table.striped {
  // th, td {}
  thead tr {
    background-color: white;
  }
  tbody {
    tr:nth-child(odd) {
      background-color: #FCFCFC;
    }
    tr:nth-child(even) {
      background-color: #FEFEFE;
    }
  }
  tfoot tr {
    background-color: #FAFAFA;
  }
}
table.lined {
  tbody td {
    border-top: 1px solid #FAFAFA;
  }
}
table.grid {
  // even thead cells will be td's, to make things simple
  font-size: 90%;
  thead {
    font-weight: bold;
  }
  td {
    border: 1px solid #EEE;
    padding: 2
  }
  tr td {
    &:first-child { border-left: 0; }
    &:last-child { border-right: 0; }
  }
}
table.padded {
  tr td, tr th {
    &:first-child { padding-left: 10px; }
    &:last-child { padding-right: 10px; }
  }
}
table.keyval {
  // th {
  //   padding-top: 4px;
  //   border-bottom: 1px solid #999;
  // }
  td:first-child {
    font-weight: bold;
  }
}
table.responses {
  td.context {
    background-color: #FFF8F8;
  }
  td.value {
    background-color: #F8FFF8;
  }
}


// .record.delete {
//   background-color: #DDD;
//   color: #555;
//   text-decoration: line-through;
// }

.hover-flow {
  word-wrap: break-word; // normal | break-word | inherit
  text-overflow: ellipsis;

  white-space: nowrap; // normal | pre |  | pre-wrap | pre-line | inherit
  overflow: hidden;
  &:hover {
    white-space: normal;
    overflow: visible;
  }
}
.shadow {
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.05);
}

input[type="checkbox"] + span {
  // bold spans coming after checkboxes
  display: inline-block;
  font-weight: bold;
  margin-left: .25em;
}
.vform, .hform {
  span {
    vertical-align: middle;
  }
  & > label {
    margin: 4px 0;
  }
}
.hform {
  label {
    span {
      &:first-child {
        display: inline-block;
        font-weight: bold;
        width: 75px;
      }
    }
  }
}
.vform {
  label {
    span {
      margin: 2px 4px;
      &:first-child {
        // only match spans that come first in a label so that radio btns with postfixed spans are not blocked and bolded
        display: block;
        font-weight: bold;
        margin: 2px 0;
      }
    }
  }
}

.truncate {
  display: block;
  max-width: 10em;
  overflow: hidden;
  text-overflow: ellipsis;
}

.array {
  .controls {
    text-align: right;
  }
  .add {
    margin: 0;
    padding: 0;
    background: none;
    border: none;
    cursor: pointer;
  }
  .add::before {
    content: "add ";
  }
  .remove {
    color: darkred;
    cursor: pointer;
  }
}

.preview {
  position: fixed;
  max-width: 50%;
  top: 10px;
  right: 10px;
  border: 1px solid #DDD;
  .content {
    padding: 10px;
    background-color: white;
  }
  .controls {
    padding: 10px;
    background-color: #EEE;
    cursor: pointer;
    span {
      float: right;
    }
    &:hover {
      background-color: #DDD;
    }
  }
}

.focus {
  box-shadow: 0 0 6px rgba(81, 203, 238, 1);
  // border: 1px solid rgba(81, 203, 238, 1);
}

.flag {
  position: absolute;
  background-color: black;
  border-radius: 3px;
  padding: 2px 6px;
  color: white;
  .triangle {
    position: absolute;
    border: 6px solid transparent;
  }
}
