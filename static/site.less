// I wish I could just return a color from a function.
// Too complicated for LESS, though, I guess.
.border-gray(@gray) {
  border: 1px solid rgb(@gray, @gray, @gray);
}
.background-gray(@gray) {
  background-color: rgb(@gray, @gray, @gray);
}
.color-gray(@gray) {
  color: rgb(@gray, @gray, @gray);
}


body {
  margin: 0;
  font-family: "Lucida Grande", Arial, sans-serif;
}
h1, h2, h3, h4, h5, h6 {
  margin: 0.5ex 0;
}
p {
  margin: 1ex 0;
}
label span {
  vertical-align: baseline;
}
label[disabled] {
  .color-gray(50%);
}
textarea, input, select {
  vertical-align: baseline;
  margin: 0;
  box-sizing: border-box;
}
input[type="radio"], input[type="checkbox"] {
  margin: 1px .25ex;
}
fieldset {
  margin: 0 10px 10px 0;
  border: 1px solid #CCC;
}
.nowrap {
  white-space: nowrap;
}
time {
  white-space: nowrap;
}
.code {
  font: 9pt monospace;
}
.shadow {
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.05);
}
.help {
  cursor: pointer;
}
.ng-invalid {
  box-shadow: 0 0 10px rgb(200, 0, 0);
}
.unlimited {
  max-height: none !important;
  max-width: none !important;
}
.json {
  font: 9pt monospace;
  min-height: 30px;
  min-width: 400px
}
button {
  margin: 0;
}
button.anchor {
  border-width: 0;
  text-decoration: underline;
  cursor: pointer;
  font-size: 100%;
  padding: 0;
}

body.admin {
  .background-gray(98%);
  font-size: 80%; // why is the default so big!?
  overflow-y: scroll;

  .flash {
    position: fixed;
    left: 0;
    right: 0;
    height: 23px;
    z-index: 1000; // only needs to be greater than the nav's z-index
    text-align: center;
    color: white;
    background-color: rgba(0, 0, 0, 66%);
    pointer-events: none; // allows click through to elements underneath
    img, span {
      vertical-align: middle;
    }
  }

  nav {
    left: 0;
    right: 0;
    // box-sizing: border-box;
    padding: 0 5px;
    font-size: 90%;
    // for some reason elements with opacity < 1.0 float to the top,
    // but a non-zero z-index here fixes that
    z-index: 100;

    // shared
    span, a, button, img, select {
      display: inline-block;
      vertical-align: middle;
    }
    span, a, button.anchor {
      padding: 2px 6px;
      // border-radius: 2px;
    }

    // hierarchical
    &.root {
      // background is especially dark for the root nav
      .background-gray(30%);

      span, a, button, select {
        margin: 3px 0 0 0;
      }

      a, button.anchor {
        border-radius: 2px 2px 0 0;
        .background-gray(80%);
        &:hover, &.current {
          .background-gray(98%); // same as body.admin background
        }
      }
    }
    &.sub {
      .background-gray(98%);
      padding-top: 2px;
      padding-bottom: 2px;

      border-bottom: 1px solid #BBB;
    }
  }
}

// semantic sections
section {
  margin: 10px 0;
  // padding: 10px;
  // background-color: white;
  // border: 1px solid #EEE;
  // border-width: 1px 0;
  // overflow-x: auto;
  // width: 100%;
  // &.padded {
  //   margin: 5px 0;
  // }
}
main {
  // main should always extend to the left and right edges of the page
  margin: 10px 0;
  // most immediate children of main should be padded
  & > section, & > form, & > p, & > a, & > h1, & > h2, & > h3, .inset {
    padding-left: 10px;
    padding-right: 10px;
  }
}
  // only a few things should stretch the whole width,
  // like sections, and tables
.box {
  padding-top: 5px;
  padding-bottom: 5px;

  background-color: white;
  border: 1px solid #EEE;
  border-width: 1px 0;
}

table {
  border-collapse: collapse;
  th {
    text-align: left;
  }
  td, th {
    vertical-align: top;
    padding-right: 5px;
  }
}
table.striped {
  thead tr {
    background-color: white;
  }
  tbody {
    tr:nth-child(odd) {
      background-color: #FCFCFC;
    }
    tr:nth-child(even) {
      background-color: #FEFEFE;
    }
  }
  tfoot tr {
    background-color: #FAFAFA;
  }
}
table.fill {
  width: 100%;
}
table.lined {
  tbody td {
    border-top: 1px solid #FAFAFA;
  }
}
table.grid {
  font-size: 90%;
  thead {
    font-weight: bold;
  }
  td, th {
    border: 1px solid #EEE;
  }
  tr td, tr th {
    &:first-child { border-left: 0; }
    &:last-child { border-right: 0; }
  }
}
table.padded {
  tr td, tr th {
    &:first-child { padding-left: 10px; }
    &:last-child { padding-right: 10px; }
  }
}
table.keyval {
  td:first-child {
    font-weight: bold;
  }
}
table.responses {
  td.context {
    background-color: #FFF8F8;
  }
  td.value {
    background-color: #F8FFF8;
  }
}

// .record.delete {
//   background-color: #DDD;
//   color: #555;
//   text-decoration: line-through;
// }

// .status span {
//   font-weight: bold;
//   margin: 10px 10px 0 0;
//   &.Submitted { color: #CCC; }
//   &.Approved { color: darkgreen; }
//   &.Rejected { color: darkred; }
// }

.hover-flow {
  word-wrap: break-word; // normal | break-word | inherit
  text-overflow: ellipsis;

  white-space: nowrap; // normal | pre |  | pre-wrap | pre-line | inherit
  overflow: hidden;
  &:hover {
    white-space: normal;
    overflow: visible;
  }
}

.array {
  .controls {
    text-align: right;
  }
  .add {
    margin: 0;
    padding: 0;
    background: none;
    border: none;
    cursor: pointer;
  }
  .add::before {
    content: "add ";
  }
  .remove {
    color: darkred;
    cursor: pointer;
  }
}

.preview {
  position: fixed;
  max-width: 50%;
  top: 10px;
  right: 10px;
  border: 1px solid #DDD;
  .content {
    padding: 10px;
    background-color: white;
  }
  .controls {
    padding: 10px;
    background-color: #EEE;
    cursor: pointer;
    span {
      float: right;
    }
    &:hover {
      background-color: #DDD;
    }
  }
}

.focus {
  box-shadow: 0 0 6px rgba(81, 203, 238, 1);
  // border: 1px solid rgba(81, 203, 238, 1);
}

.flag {
  position: absolute;
  background-color: black;
  border-radius: 3px;
  padding: 2px 6px;
  color: white;
  .triangle {
    position: absolute;
    border: 6px solid transparent;
  }
}
