var Form=function(){function g(a,b){b(a);for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];1==d.nodeType&&g(d,b)}}var h={get:function(a){var b=a.tagName.toLowerCase();if("input"==b)return"checkbox"===a.type?[{value:a.value,checked:a.checked}]:"radio"===a.type?[{value:a.value,checked:a.checked}]:"hidden"===a.type?[{value:a.value,hidden:!0}]:[{value:a.value}];if("select"==b){if(a.multiple){for(var b=[],c=0;c<a.options.length;c++){var d=a.options[c];d.selected&&b.push({value:d.value,array:!0})}return b}return[{value:a.options[a.selectedIndex].value}]}if("textarea"==
b)return[{value:a.value}];console.log("ignoring element with unsupported tag:",a);return[]},set:function(a,b){var c=function(a){if(Array.isArray(b)){if(a=b.indexOf(a),-1<a)return b.splice(a,1),!0}else if(b===a)return b=null,!0;return!1},d=function(){if(Array.isArray(b))return b.pop();var a=b;b=null;return a},e=a.tagName.toLowerCase();if("input"==e)"checkbox"===a.type?a.checked=c("on"==a.value?!0:a.value):"radio"===a.type?a.checked=c("on"==a.value?!0:a.value):(c=d(),void 0!==c&&(a.value=c));else if("select"==
e)for(d=0;d<a.options.length;d++)e=a.options[d],e.selected=c(e.value);else"textarea"==e?(c=d(),void 0!==c&&(a.value=c)):console.log("ignoring element with unsupported tag:",a);return b}},k={get:function(a){a=a.map(h.get);a=Array.prototype.concat.apply([],a);var b=function(a){return void 0!==a.checked&&"on"==a.value?a.checked:a.value};return 2==a.length&&a[0].hidden&&void 0!==a[1].checked?a[1].checked?a[1].value:a[0].value:a.length?a.some(function(a){return!0===a.array})||1<a.length?a.map(b):b(a[0]):
null},set:function(a,b){2==a.length&&"hidden"==a[0].type&&"checkbox"==a[1].type?a[1].checked=a[1].value==b:a.forEach(function(a){b=h.set(a,b)})}},f=function(a){this.container=a};f.prototype.getFormData=function(){new FormData;throw Error("Not yet implemented");};f.prototype.groupByName=function(){var a={};g(this.container,function(b){if(b.hasAttribute("name")){var c=b.getAttribute("name");void 0===a[c]&&(a[c]=[]);a[c].push(b)}});return a};f.prototype.get=function(){var a=this.groupByName(),b={},c;
for(c in a)b[c]=k.get(a[c]);return b};f.prototype.set=function(a){var b=this.groupByName(),c;for(c in b)a.hasOwnProperty(c)&&k.set(b[c],a[c])};return f}();
